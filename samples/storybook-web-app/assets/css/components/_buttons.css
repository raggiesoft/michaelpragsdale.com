/* assets/css/components/_buttons.css */

/* --- General Button Reset/Base (Optional, Tailwind's Preflight handles much of this) --- */
button {
    cursor: pointer;
    border: none;
    background-color: transparent;
    padding: 0; /* Reset padding unless specified */
    /* transition: background-color 0.2s ease, color 0.2s ease, opacity 0.2s ease; */
}

/* --- Header Icon Buttons --- */
/* Targetting #menu-toggle, #sidebar-close-button, #codex-toggle, #codex-close-button, #back-to-library-button */
/* These generally use p-1 or p-2, rounded, focus:outline-none, focus:ring-2 from Tailwind in HTML */
/* Specific hover/focus states are defined in _sidebar.css or _header.css if we make one */
/* We can ensure a consistent focus ring and hover here if not already covered */
#menu-toggle,
#sidebar-close-button,
#codex-toggle,
#codex-close-button,
#back-to-library-button {
    color: var(--color-text-primary); /* Default icon color */
    padding: 0.5rem; /* p-2 equivalent */
    border-radius: 0.25rem; /* rounded */
}

#menu-toggle:hover,
#sidebar-close-button:hover,
#codex-toggle:hover,
#codex-close-button:hover,
#back-to-library-button:hover {
    background-color: var(--color-bg-button-hover);
    color: var(--color-text-button); /* Or primary, if different */
}

#menu-toggle:focus-visible, /* Using :focus-visible for better accessibility */
#sidebar-close-button:focus-visible,
#codex-toggle:focus-visible,
#codex-close-button:focus-visible,
#back-to-library-button:focus-visible {
    outline: 2px solid transparent; /* Remove default outline if custom ring is applied */
    outline-offset: 2px;
    box-shadow: 0 0 0 2px var(--color-ring-focus);
}


/* --- Story Navigation Buttons --- */
#prev-button,
#next-button {
    /* Tailwind: font-bold py-2 px-4 rounded transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed */
    padding: 0.5rem 1rem;
    font-weight: 600; /* semibold/bold */
    border-radius: 0.25rem;
    transition: background-color 0.2s ease-in-out, opacity 0.2s ease-in-out;
}

#prev-button {
    background-color: var(--color-bg-button);
    color: var(--color-text-button);
}
#prev-button:hover:not(:disabled) {
    background-color: var(--color-bg-button-hover);
}
#prev-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

#next-button {
    background-color: var(--color-bg-button-action);
    color: var(--color-text-white);
}
#next-button:hover:not(:disabled) {
    background-color: var(--color-bg-button-action-hover);
}
#next-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* --- Library Card "Read This Saga" Button --- */
.read-series-button {
    /* Tailwind: w-full font-bold py-2 px-4 rounded transition duration-200 mt-auto flex-shrink-0 */
    /* Background and text color are applied inline via JS using CSS variables for now.
       If we want a more CSS-driven approach for these: */
    /* background-color: var(--color-accent); */
    /* color: var(--color-text-white); */
    /* padding: 0.5rem 1rem; */
    /* font-weight: 600; */
    /* border-radius: 0.25rem; */
    /* transition: background-color 0.2s ease-in-out; */
}
/* .read-series-button:hover { */
    /* background-color: var(--color-accent-hover); */ /* Ensure --color-accent-hover is defined */
/* } */


/* --- Codex Tab Buttons (already styled in _codex.css but could be generalized) --- */
/* .codex-tab-button { ... } */
/* .codex-tab-button.active { ... } */

/* --- Codex Pagination Buttons (already styled in _codex.css) --- */
/* #codex-list-pagination button { ... } */

/* --- Codex Item Buttons (clickable list items - already styled in _codex.css) --- */
/* #codex-items-container .codex-item-button { ... } */
/* #codex-items-container .codex-item-button.active { ... } */